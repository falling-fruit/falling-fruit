<!-- Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-FYL0KY5RWY"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-FYL0KY5RWY');
</script>

<%= javascript_include_tag "application" %>
<%= stylesheet_link_tag "jquery-ui" %>
<%= stylesheet_link_tag "base" %>

<!-- Force links to open new window. Cross browser? -->
<!--<base target="_blank" />-->

<div id="mainmap_container">
  <div id="map"></div>
  <p id="stamen_attribution" style="display:none;">
    <%= translate("locations.index.stamen_html").html_safe %>
  </p>
  <div id="embed_branding">
    <%= link_to("falling fruit",root_url,:id => "falling_fruit") %>
    <div class="hr-like"></div>
    <span>mini</span>
    <%= link_to(new_location_url(:c => @perma[:cats].to_s),:id => "add_source") do %>
      <%= translate("glossary.add_source") %>
    <% end %>
  </div>
</div>

<!-- Unverified? -->
<div id="unverified_help" style="display:none;">
 <%= translate("glossary.unverified") %>
</div>

<script type="text/javascript" charset="utf-8">
  // Load I18n locale into JS
  I18n.defaultLocale = "<%= I18n.default_locale %>";
  I18n.locale = "<%= I18n.locale %>";
</script>
<%= stylesheet_link_tag "shadowbox" %>
<%= javascript_include_tag "shadowbox-i18n" %>
<%= javascript_include_tag "shadowbox-infowindow" %>
<%= render 'map_includes' %>
<script type="text/javascript" charset="utf-8">

  // ================= globals ==================

  var lat = 36.45662936733231;
  var lng = -49.57030500000002;
  var zoom = 2;
  var type = google.maps.MapTypeId.ROADMAP;
  var cats = undefined;
  <% unless @perma[:lat].nil? %>lat = <%= @perma[:lat] %>;<% end %>
  <% unless @perma[:lng].nil? %>lng = <%= @perma[:lng] %>;<% end %>
  <% unless @perma[:zoom].nil? %>zoom = <%= @perma[:zoom] %>;<% end %>
  <% unless @perma[:type].nil? %>type = '<%= @perma[:type] %>';<% end %>
  <% unless @perma[:cats].nil? %>
    cats = '<%= @perma[:cats] %>'.split(",");
  <% end %>
  var muni = <%= (@perma[:muni].nil? or @perma[:muni]) ? "true" : "false" %>;
  var labels = <%= (!@perma[:labels].nil? and @perma[:labels]) ? "true" : "false" %>;
  var center_marker = <%= (!@perma[:center_mark].nil? and @perma[:center_mark]) ? "true" : "false" %>;
  var center_radius = <%= (!@perma[:center_radius].nil? and @perma[:center_radius].to_i > 0) ? @perma[:center_radius].to_i : "undefined" %>;

  var skip_ids = null;
  var type_filter = [];
  <% unless @types.nil? %>
    type_filter = <%= @types.collect{ |t| t.id } %>;
  <% end %>

  // state variable used to leave out certain info_window features (report)
  <% $embed = (not request.fullpath.match('/locations/embed[.]*').nil?) %>

  // ================= functions =================

  function initialize() {
    basemap(lat,lng,zoom,type);

    google.maps.event.addListener(map, 'maptypeid_changed', function(event) {
      update_attribution();
    });

    google.maps.event.addListener(map, 'rightclick', function(event) {
      remove_add_marker();
      place_add_marker(event.latLng);
    });

    google.maps.event.addListenerOnce(map, 'tilesloaded', function(event) {
      update_display_embedded(true,zoom,muni);
      if (labels && zoom > 12) {
        labelize_markers();
      }
      // Ensures that labels come on later if labels = true and zoom <= 12
      if (labels && zoom <= 12) {
        labelsOn = true;
      }
    });

    google.maps.event.addListener(map, 'idle', function() {
      update_display_embedded(false,null,muni);
    });

    if(center_marker){
      var w = 19;
      var h = 19;
      var marker = new google.maps.Marker({
        map: map,
        icon: {
          url: '/cross.png',
          size: new google.maps.Size(w, h),
          origin: new google.maps.Point(0, 0),
          anchor: new google.maps.Point(w/2, h/2)
        },
        position: new google.maps.LatLng(lat,lng)
      });
    }

    if(center_radius != undefined){
      var marker = new google.maps.Marker({
        map: map,
        position: new google.maps.LatLng(lat, lng)
    });
      // Add circle overlay and bind to marker
      var circle = new google.maps.Circle({
        map: map,
        radius: center_radius,    // 10 miles in metres
        fillColor: '#AA0000'
      });
      circle.bindTo('center', marker, 'position');
    }
  }

  // ================== main-level code ===================

  google.maps.event.addDomListener(window, 'load', initialize);

</script>
<%= javascript_include_tag "maplabel" %>
<%= javascript_include_tag "progressBar" %>
<%= javascript_include_tag "richmarker" %>
<%= javascript_include_tag "mapcommon" %>
<%= javascript_include_tag "mainmap" %>
